{
	"name": "Expense Tracker Development",
	"dockerComposeFile": "../docker-compose.dev.yml",
	"service": "app",
	"workspaceFolder": "/app",
	"shutdownAction": "stopCompose",

	// Features to add to the dev container
	"features": {
		"ghcr.io/devcontainers/features/git:1": {},
		"ghcr.io/devcontainers/features/github-cli:1": {},
		"ghcr.io/devcontainers/features/docker-in-docker:2": {}
	},

	// Configure tool-specific properties
	"customizations": {
		"vscode": {
			"settings": {
				"terminal.integrated.defaultProfile.linux": "bash",
				"typescript.preferences.importModuleSpecifier": "relative",
				"editor.formatOnSave": true,
				"editor.codeActionsOnSave": {
					"source.fixAll.eslint": "explicit"
				},
				"files.associations": {
					"*.svelte": "svelte"
				},
				"emmet.includeLanguages": {
					"svelte": "html"
				}
			},

			"extensions": [
				"svelte.svelte-vscode",
				"bradlc.vscode-tailwindcss", 
				"esbenp.prettier-vscode",
				"dbaeumer.vscode-eslint",
				"ms-vscode.vscode-typescript-next",
				"Prisma.prisma",
				"ms-vscode.vscode-json",
				"formulahendry.auto-rename-tag",
				"christian-kohler.path-intellisense",
				"ms-vscode-remote.remote-containers"
			]
		}
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally
	"forwardPorts": [5173, 5433, 5050],
	"portsAttributes": {
		"5173": {
			"label": "SvelteKit Dev Server",
			"onAutoForward": "notify"
		},
		"5433": {
			"label": "PostgreSQL Database"
		},
		"5050": {
			"label": "PgAdmin Web Interface"
		}
	},

	// Use 'postCreateCommand' to run commands after the container is created
	"postCreateCommand": "echo 'ðŸš€ Expense Tracker Dev Environment Ready!'",

	// Use 'postStartCommand' to run commands after the container starts
	"postStartCommand": {
		"db-status": "until pg_isready -h postgres -p 5432 -U expense_tracker; do sleep 1; done && echo 'âœ… Database is ready!'",
		"prisma-migrate": "npx prisma db push",
		"info": "echo 'ðŸŽ¯ Access the app at http://localhost:5179'"
	},

	// Set container user for VS Code
	"remoteUser": "expense-tracker",

	// Mount Docker socket for Docker-in-Docker
	"mounts": [
		"source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind"
	]
}