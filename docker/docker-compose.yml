version: '3.8'

networks:
  expense-tracker-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/24

services:
  postgres:
    image: postgres:16-alpine
    container_name: expense-tracker-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: expense_tracker
      POSTGRES_USER: expense_user
      POSTGRES_PASSWORD: expense_secure_password_2024
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5433:5432"  # Use different port to avoid conflicts with NAS services
    networks:
      expense-tracker-network:
        ipv4_address: 172.28.0.2
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U expense_user -d expense_tracker"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  app:
    build:
      context: ../
      dockerfile: docker/Dockerfile
    container_name: expense-tracker-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://expense_user:expense_secure_password_2024@postgres:5432/expense_tracker
      ORIGIN: http://localhost:3000
    ports:
      - "3000:3000"
    networks:
      expense-tracker-network:
        ipv4_address: 172.28.0.3
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ../uploads:/app/uploads  # For CSV file uploads
      - ../logs:/app/logs        # For application logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and sessions (optional but recommended)
  redis:
    image: redis:7-alpine
    container_name: expense-tracker-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      expense-tracker-network:
        ipv4_address: 172.28.0.4
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local