# Multi-stage build for production backend
FROM node:20-alpine AS deps

# Install pnpm
RUN npm install -g pnpm

WORKDIR /app

# Copy workspace configuration
COPY pnpm-workspace.yaml package.json pnpm-lock.yaml ./
COPY apps/backend/package.json ./apps/backend/

# Install dependencies
RUN pnpm install --frozen-lockfile

# Build stage
FROM node:20-alpine AS builder

# Install pnpm
RUN npm install -g pnpm

WORKDIR /app

# Copy dependencies from deps stage
COPY --from=deps /app/node_modules ./node_modules
COPY --from=deps /app/apps/backend/package.json ./apps/backend/
COPY pnpm-workspace.yaml package.json pnpm-lock.yaml ./

# Copy backend source code
COPY apps/backend ./apps/backend

# Generate Prisma Client and build
WORKDIR /app/apps/backend
RUN npx prisma generate && pnpm build

# Production stage
FROM node:20-alpine AS production

# Install pnpm and wget for health checks
RUN npm install -g pnpm && \
    apk add --no-cache wget

WORKDIR /app

# Copy package files
COPY --from=builder /app/apps/backend/package.json ./
COPY --from=builder /app/pnpm-workspace.yaml ./
COPY --from=builder /app/pnpm-lock.yaml ./

# Install production dependencies only
RUN pnpm install --prod --no-frozen-lockfile

# Copy built application
COPY --from=builder /app/apps/backend/dist ./dist
COPY --from=builder /app/apps/backend/node_modules/.prisma ./node_modules/.prisma

# Copy Prisma schema for migrations
COPY --from=builder /app/apps/backend/prisma ./prisma

# Create uploads directory
RUN mkdir -p uploads

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S backend -u 1001 -G nodejs && \
    chown -R backend:nodejs /app

USER backend

EXPOSE 3004

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3004/health || exit 1

# Set environment variables
ENV NODE_ENV=production
ENV PORT=3004

# Start server (migrations run automatically via entrypoint if needed)
CMD ["sh", "-c", "pnpm prisma migrate deploy && node dist/main.js"]