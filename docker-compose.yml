version: '3.8'

name: expense-tracker

services:
  postgres:
    image: postgres:16-alpine
    container_name: expense-tracker-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: expense_tracker
      POSTGRES_PASSWORD: secure_prod_password_2024
      POSTGRES_DB: expense_tracker
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U expense_tracker -d expense_tracker"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - expense-tracker-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: expense-tracker-app
    restart: unless-stopped
    ports:
      - "5179:3000"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://expense_tracker:secure_prod_password_2024@postgres:5432/expense_tracker
      HOST: 0.0.0.0
      PORT: 3000
      SECRET_KEY: ${SECRET_KEY:-change_me_in_production}
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - expense-tracker-network
    volumes:
      - app_logs:/app/logs

volumes:
  postgres_data:
    driver: local
  app_logs:
    driver: local

networks:
  expense-tracker-network:
    driver: bridge