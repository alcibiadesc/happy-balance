version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: dokploy-postgres
    environment:
      POSTGRES_USER: dokploy
      POSTGRES_DB: dokploy
      POSTGRES_PASSWORD: amukds4wi9001583845717ad2
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dokploy-network
    deploy:
      restart_policy:
        condition: any
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dokploy"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7
    container_name: dokploy-redis
    volumes:
      - redis_data:/data
    networks:
      - dokploy-network
    deploy:
      restart_policy:
        condition: any
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  dokploy:
    image: dokploy/dokploy:latest
    container_name: dokploy
    ports:
      - "3003:3000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /volume1/Docker/dokploy/config:/etc/dokploy
      - docker_config:/root/.docker
    environment:
      ADVERTISE_ADDR: 192.168.1.170
      ALLOWED_ORIGINS: "http://localhost:3003,http://192.168.1.170:3003,http://gringotts.hair-map.ts.net:3003,http://100.122.190.40:3003"
      HOST: 0.0.0.0
      PORT: 3000
    networks:
      - dokploy-network
    deploy:
      restart_policy:
        condition: any
      depends_on:
        - postgres
        - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  traefik:
    image: traefik:v3.1.2
    container_name: dokploy-traefik
    ports:
      - "9080:80"
      - "9443:443"
      - "9443:443/udp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /volume1/Docker/dokploy/traefik/traefik.yml:/etc/traefik/traefik.yml
      - /volume1/Docker/dokploy/traefik/dynamic:/etc/dokploy/traefik/dynamic
    networks:
      - dokploy-network
    deploy:
      restart_policy:
        condition: any
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  docker_config:
    driver: local

networks:
  dokploy-network:
    driver: overlay
